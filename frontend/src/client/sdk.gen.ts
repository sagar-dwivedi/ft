// This file is auto-generated by @hey-api/openapi-ts

import type { Options as ClientOptions, TDataShape, Client } from "./client";
import type {
	RootData,
	RootResponses,
	GetTransactionsData,
	GetTransactionsResponses,
	AddTransactionData,
	AddTransactionResponses,
	AddTransactionErrors,
	DeleteTransactionData,
	DeleteTransactionResponses,
	DeleteTransactionErrors,
	UpdateTransactionData,
	UpdateTransactionResponses,
	UpdateTransactionErrors,
} from "./types.gen";
import { client as _heyApiClient } from "./client.gen";

export type Options<
	TData extends TDataShape = TDataShape,
	ThrowOnError extends boolean = boolean,
> = ClientOptions<TData, ThrowOnError> & {
	/**
	 * You can provide a client instance returned by `createClient()` instead of
	 * individual options. This might be also useful if you want to implement a
	 * custom client.
	 */
	client?: Client;
	/**
	 * You can pass arbitrary values through the `meta` object. This can be
	 * used to access values that aren't defined as part of the SDK function.
	 */
	meta?: Record<string, unknown>;
};

/**
 * Root
 */
export const root = <ThrowOnError extends boolean = false>(
	options?: Options<RootData, ThrowOnError>,
) => {
	return (options?.client ?? _heyApiClient).get<
		RootResponses,
		unknown,
		ThrowOnError
	>({
		url: "/",
		...options,
	});
};

/**
 * Get Transactions
 */
export const getTransactions = <ThrowOnError extends boolean = false>(
	options?: Options<GetTransactionsData, ThrowOnError>,
) => {
	return (options?.client ?? _heyApiClient).get<
		GetTransactionsResponses,
		unknown,
		ThrowOnError
	>({
		url: "/transactions/",
		...options,
	});
};

/**
 * Add Transaction
 */
export const addTransaction = <ThrowOnError extends boolean = false>(
	options: Options<AddTransactionData, ThrowOnError>,
) => {
	return (options.client ?? _heyApiClient).post<
		AddTransactionResponses,
		AddTransactionErrors,
		ThrowOnError
	>({
		url: "/transactions/",
		...options,
		headers: {
			"Content-Type": "application/json",
			...options.headers,
		},
	});
};

/**
 * Delete Transaction
 */
export const deleteTransaction = <ThrowOnError extends boolean = false>(
	options: Options<DeleteTransactionData, ThrowOnError>,
) => {
	return (options.client ?? _heyApiClient).delete<
		DeleteTransactionResponses,
		DeleteTransactionErrors,
		ThrowOnError
	>({
		url: "/transactions/{tx_id}",
		...options,
	});
};

/**
 * Update Transaction
 */
export const updateTransaction = <ThrowOnError extends boolean = false>(
	options: Options<UpdateTransactionData, ThrowOnError>,
) => {
	return (options.client ?? _heyApiClient).put<
		UpdateTransactionResponses,
		UpdateTransactionErrors,
		ThrowOnError
	>({
		url: "/transactions/{tx_id}",
		...options,
		headers: {
			"Content-Type": "application/json",
			...options.headers,
		},
	});
};
